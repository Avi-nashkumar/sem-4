# -*- coding: utf-8 -*-
"""Untitled5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10UuSfNgGEUm8rLN1-HOpFXrA0EkxMTkP
"""

# q1
timing = [0,12]
#creating the array
arr = [
      ['silent disco', 12, 100000],
      ['bonfire' ,12, 500000],
      ['street play', 2, 60000],
      ['dancing competition', 8, 75000],
      ['short film screening', 10, 45000],
      ['rangoli', 4, 50000],
      ['scavenger hunt', 5, 200000],
      ['face art', 4, 40000],
      ['solo music', 7, 95000],
      ['group music', 7, 150000],
      ['mime', 11, 120000],
      ['poetry recitation', 11, 300000]
]
#defining the function
def printJobScheduling(arr, t): 
#lenght of array
  n=len(arr)
  #sorting all jobs according to decreasing order of penalty
  for i in range(n): 
        for j in range(n - 1 - i): 
            if arr[j][2] < arr[j + 1][2]: 
                arr[j], arr[j + 1] = arr[j + 1], arr[j] 
  result = [False] * t #to keep track of time
  job = ['-1'] * t 
  for i in range(len(arr)): 
  
        # Find a free slot for this job  
        # (Note that we start from the  
        # last possible slot) 
        for j in range(min(t - 1, arr[i][1] - 1), -1, -1): 
              
            # Free slot found 
            if result[j] is False: 
                result[j] = True
                job[j] = arr[i][0] 
                break
  
    # print the sequence 
  print(job) 
print("Following is minimum penalty sequence of jobs") 
printJobScheduling(arr, 12)